[
  {
    "objectID": "qmd_to_R_Script.html",
    "href": "qmd_to_R_Script.html",
    "title": "Convert .qmd Quarto file to .R Script",
    "section": "",
    "text": "If your adviser wants you to send them your code in a .R Script, but you originally wrote it in a .qmd file…\n\nthis process removes the text parts of the .qmd, just keeps code and comments within all code chunks\n\n\nOpen RStudio by double clicking on your .qmd file (which auto sets the working directory to that folder)\nClose just .qmd file (leave RStudio open)\n\n\nOr you could open RStudio and manually set the working directory the folder where .qmd file is (RStudio &gt; Session &gt; Set working directory)\n\n\nRun code below in Rstudio console (but edit file_name.qmd to match your .qmd file name):\n\nknitr::purl(\"file_name.qmd\")\nThis will save a new .R script file in that folder that is just the code from your .qmd file\n\nAdapted from https://bookdown.org/yihui/rmarkdown-cookbook/purl.html\n(.Rmd works same way as .qmd)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BIO 5100 Resources",
    "section": "",
    "text": "Videos, links and explanation for how to install, and what is R, RStudio and R Packages.\n\n\n\n\n\nSome tasty R code for how to do a variety of tasks in R.\n\n\n\n\n\nGeneral style guidance for writing clear and efficient R code.\nAnd additional style guidance can also be found here: https://r4ds.hadley.nz/workflow-style.html\n\n\n\n\n\nData Carpentry develops workshops on the fundamental data skills needed to conduct research, and its lessons are domain specific (e.g., ecology, genomics, geospatial). Lessons are in the form of self-paced tutorials, and are designed for researchers to teach themselves basic concepts and skills for working with data.\nEcology Workshop\nGenomics Workshop\n\n\n\n\n\nBrief 3-8 min videos on various topics From the Duke Center for Computational Thinking covering topics like data manipulation with dplyr, data visualization with ggplot2, and using other functions from the tidyverse.\n\n\n\n\n\nCheat Sheets for writing various types of R code\nStarting out, I’d suggest downloading (and maybe printing out) these two cheat sheets: Data Visualization w/ ggplot2 & Data Transformation w/ dplyr\n\n\n\n\n\nVisualizes dplyr code to help you understand what specific dplyr functions are doing with the data\n\n\n\n\n\nIf your adviser wants you to send them your code in a .R Script, but you originally wrote it in a .qmd file…\nAn other option is the render your .qmd file to a word doc and email them that."
  },
  {
    "objectID": "index.html#r-coding",
    "href": "index.html#r-coding",
    "title": "BIO 5100 Resources",
    "section": "",
    "text": "Videos, links and explanation for how to install, and what is R, RStudio and R Packages.\n\n\n\n\n\nSome tasty R code for how to do a variety of tasks in R.\n\n\n\n\n\nGeneral style guidance for writing clear and efficient R code.\nAnd additional style guidance can also be found here: https://r4ds.hadley.nz/workflow-style.html\n\n\n\n\n\nData Carpentry develops workshops on the fundamental data skills needed to conduct research, and its lessons are domain specific (e.g., ecology, genomics, geospatial). Lessons are in the form of self-paced tutorials, and are designed for researchers to teach themselves basic concepts and skills for working with data.\nEcology Workshop\nGenomics Workshop\n\n\n\n\n\nBrief 3-8 min videos on various topics From the Duke Center for Computational Thinking covering topics like data manipulation with dplyr, data visualization with ggplot2, and using other functions from the tidyverse.\n\n\n\n\n\nCheat Sheets for writing various types of R code\nStarting out, I’d suggest downloading (and maybe printing out) these two cheat sheets: Data Visualization w/ ggplot2 & Data Transformation w/ dplyr\n\n\n\n\n\nVisualizes dplyr code to help you understand what specific dplyr functions are doing with the data\n\n\n\n\n\nIf your adviser wants you to send them your code in a .R Script, but you originally wrote it in a .qmd file…\nAn other option is the render your .qmd file to a word doc and email them that."
  },
  {
    "objectID": "index.html#coding-with-ai-help",
    "href": "index.html#coding-with-ai-help",
    "title": "BIO 5100 Resources",
    "section": "Coding with AI help",
    "text": "Coding with AI help\n\nRtutor.ai\n\nAI R code writer, can help you figure out what you need to do or debug your code\n\n\n\nGitHub Copilot in RStudio\n\nTo use GitHub Copilot, you must have a GitHub account and an active subscription to Copilot. GitHub Copilot is free for students and educators.\n\n\n\n(video) How to use GitHub Copilot and ChatGPT in RStudio\n\nIn this video, we learn how to use GitHub Copilot and ChatGPT directly from within RStudio. Specifically, we’ll go over all of the setup steps that are required for using 1) the RStudio Copilot integration, and 2) the chattr package which allows you to interact with Large Language Models (LLMs) like the OpenAI models."
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "BIO 5100 Resources",
    "section": "Quarto",
    "text": "Quarto\n\nquarto.org\n\nMain reference website\n\n\n\nAwesome Quarto (Github site)\n\nA(n awesome) curated list of Quarto talks, tools, examples & articles\n\n\n\n(Video) Getting started with Quarto\n\nThis video walks you through creating documents, presentations, and websites and publishing with Quarto. The video features authoring Quarto documents with executable R code chunks using the RStudio Visual Editor (https://quarto.org/docs/visual-editor/)."
  },
  {
    "objectID": "index.html#statistics",
    "href": "index.html#statistics",
    "title": "BIO 5100 Resources",
    "section": "Statistics",
    "text": "Statistics\n\nMarinStatsLectures Youtube Channel\n\nThese R Programming and Statistics videos/tutorials were originally created for Master’s and PhD students at UBC by Professor Mike Marin and are now available to public. These videos provide a comprehensive and completely free set of tutorials for introductory and intermediate concepts in Statistics and Statistics with R.\n\n\n\nCommon statistical tests as linear models\n\nReference website showing the linear models underlying common parametric and “non-parametric” traditional statistical tests."
  },
  {
    "objectID": "index.html#data-management",
    "href": "index.html#data-management",
    "title": "BIO 5100 Resources",
    "section": "Data Management",
    "text": "Data Management\n\nOpenscapes - Guidance for data organization in spreadsheets\n\nCompiled (by openscapes.org) guidance from multiple resources for how to organize and format your data in spreadsheets so that it is ready to analyze in R and follows “tidy data” principles.\n\n\n\nHow to name things (files) - by Jenny Bryan\n\nBest practices for naming your files by Jenny Bryan (& she’s got lots of other great resources on her website)\n\n\n\nData Carpentry - Common Mistakes Storing Data in Spreadsheets"
  },
  {
    "objectID": "index.html#misc.",
    "href": "index.html#misc.",
    "title": "BIO 5100 Resources",
    "section": "Misc.",
    "text": "Misc.\n\nScientific writing resources\n\nLinks to papers with advice on scientific writing, including specifics on how to write statistical methods and results sections\n\n\n\nConnect your Google Scholar to CPP Library to access pdfs of journal articles\n\nLink your CPP library account to your google scholar\n\n\n\nHow to appropriately cite R and R packages\n\nA short primer from a popular R blog on how to cite R and R packages in your thesis, publications, etc.\n\n\n\nFisheries-Related R Packages"
  },
  {
    "objectID": "index.html#continue-your-learning",
    "href": "index.html#continue-your-learning",
    "title": "BIO 5100 Resources",
    "section": "Continue your learning",
    "text": "Continue your learning\n\nTidy Tuesday Website\n\nThe weekly #TidyTuesday event people all over the world are doing! Every week they post a raw dataset, a chart or article related to that dataset, and ask you to explore the data. Some people will then post what they come up with on Twitter. A good way to keep practicing your R skills after Bio 5100 is over, can make it weekly thing you do with fellow students…\n\n\n\nprstatistics.com (statistics workshops)\n\nCompany that offers ~1 week workshops on various specific biostatistics and R coding topics.\n\n\n\nHighland Statistics (advanced statistics workshops and books)\n\nCompany that offers “how to” textbooks and ~1 week workshops on advanced statistics topics (e.g., generalized linear models, mixed models)."
  },
  {
    "objectID": "index.html#communities-to-join",
    "href": "index.html#communities-to-join",
    "title": "BIO 5100 Resources",
    "section": "Communities to join",
    "text": "Communities to join\n\nR Ladies\n\nAttend events, or join a Local Chapter (e.g., R Ladies Pasadena,R Ladies Riverside)\n\n\n\nData Science Hangout\n\nJoin a community of data scientists that share insights about what it means to be a responsible, effective, and inspiring leader."
  },
  {
    "objectID": "Example_Code.html",
    "href": "Example_Code.html",
    "title": "Example Code from BIO 5100/L",
    "section": "",
    "text": "Spring 2024 BIO 5100/L class notes and example code\nWeek 2-3 Visualize Distributions & Descriptive Statistics"
  },
  {
    "objectID": "Online_Books.html",
    "href": "Online_Books.html",
    "title": "Online Books",
    "section": "",
    "text": "Statistical Inference via Data Science (A ModernDive into R and the Tidyverse)\n\nIntroduction to R, RStudio and the Tidyverse for visualizing, wrangling and analyzing your data.\n\n\n\nApplied Statistics for Experimental Biology by Jeffrey A. Walker\n\n(Primary text we follow for BIO 5100/L) Takes a statistical modeling approach, focusing on estimates of effects and uncertainty instead of traditional hypothesis testing.\n\n\n\nR for Data Science (2nd Edition) by Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund\n\nMostly covers details of using the tidyverse to import, wrangle and get your data ready to analyze.\n\n\n\nGuide to Effect Sizes and Confidence Intervals\n\nCollaborative guide aims to provide academics, students and researchers with hands-on, step-by-step instructions for calculating effect sizes and confidence intervals for common statistical procedures.\n\n\n\nFundamentals of Data Visualization (using R) by Claus O. Wilke\n\nA guide to making visualizations that accurately reflect the data, tell a story, and look professional.\nThe R code for the book can be found on GitHub, at https://github.com/clauswilke/dataviz\n\n\n\nAnalysis of community ecology data in R by David Zelený\n\nMultivariate analysis including ordination (e.g., PCA, nMDS plots), cluster analysis and diversity analysis\n\n\n\nApplied Biostats by Yaniv Brandvain\n\nA “book” written to accompany his biostats course, lots of good guidance and resources.\n\n\n\nStatistical Thinking for the 21st Century by Russell A. Poldrack\n\nModern approach to introductory statistics, good sections on plotting and summarizing data.\n\n\n\nIntroduction to Modern Statistics by Mine Çetinkaya-Rundel & Johanna Hardin\n\nModern take on introductory statistics in an R based format.\n\n\n\nModern Statistics for Modern Biology by Susan Holmes, Wolfgang Huber\n\nCovers many modern approaches to data analysis, and many different types of data including RNA-Seq, flow-cytometry, taxa abundances, imaging data and single cell measurements.\nNote some of the R code relies on Base R instead of Tidyverse functions.\n\n\n\nBeyond Multiple Linear Regression: Generalized Linear Models and Multilevel Models By Julie Legler and Paul Roback\n\nMore advanced stats topics including Generalized Linear Models likelihood theory, zero-inflated Poisson, and parametric bootstrapping\n\n\n\nBiological Statistics by John H. McDonald\n\nTraditional statistics text, covering details of specific hypothesis tests (not R based, but potentially useful if your adviser makes you to use old school statistics)\n\n\n\nThe Big Book of R (links to online textbooks)\n\nA maintained list of of online R textbook resources"
  },
  {
    "objectID": "Distributions.html",
    "href": "Distributions.html",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "You only need to “install” packages (download them to your computer) once.\nIf you have not already installed the tidyverse package to the computer you are using you can do so by: RStudio &gt; Tools &gt; Install Packages (type in package name)\nBut you have to “load” packages during each R session in order to use the functions within them\n\n\n1library(tidyverse)\n2library(skimr)\n\n\n1\n\nload the tidyverse package (which includes ggplot2 and dplyr)\n\n2\n\nload the skimr package (which includes the skim() function for descriptive statistics)\n\n\n\n\nThe tidyverse package is actually a collection of multiple R packages https://www.tidyverse.org/packages/ including the ggplot2 package (for plotting) and dplyr package (for organizing and summarizing data). And you can load these (and others packages in the tidyverse) all at once using library(tidyverse). You could alternatively load them separately library(ggplot2) and then library(dplyr) and so on.\nThe ggplot2 Package we will use primarily for making plots (and is part of the tidyverse) has great help pages: https://ggplot2.tidyverse.org/reference/index.html\nThe dplyr Package we will use for “data wrangling” (e.g., organizing, summarizing) and it also has (not as extensive) help pages https://dplyr.tidyverse.org/ (plus cheat sheets RStudio &gt; Help &gt; Cheatsheets)\n\n\n\nA file named ‘YellowTangData_29_SEP_2016.csv’ is saved in the same folder (directory) as my .qmd file.\n\n1dat_yt &lt;- read_csv(\"YellowTangData_29_SEP_2016.csv\")\n\n\n1\n\nUse the read_csv() function to read the .csv data table file, and assign that to an R object named dat_yt\n\n\n\n\n\nThe read_csv() function is from the readr package in the tidyverse\nAfter running the code chunk above, the dat_yt object you created should show up in the RStudio Environment window (top right)\n\n\n\n\n\n1glimpse(dat_yt)\n\n\n1\n\nuse glimpse() function to examine the structure of the tibble named dat_yt\n\n\n\n\nRows: 100\nColumns: 8\n$ sex           &lt;chr&gt; \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"…\n$ length_cm     &lt;dbl&gt; 20.3, 16.0, 17.2, 17.1, 15.9, 20.5, 17.7, 15.1, 21.1, 19…\n$ gonad_wt_g    &lt;dbl&gt; 6.6, 22.0, 6.2, 17.4, 17.6, NA, 9.1, 15.4, 8.8, 7.6, 9.0…\n$ home_range_m2 &lt;dbl&gt; 3.6, 24.5, 3.4, 19.8, 15.7, 5.1, 7.8, 2.1, 3.5, 1.7, 2.2…\n$ gut_wt_g      &lt;dbl&gt; 2.6, 0.6, 2.1, 0.7, 0.4, 0.7, 1.6, 2.7, 0.4, 2.2, 0.8, 0…\n$ parasites     &lt;dbl&gt; 8, 8, 7, 8, 8, 8, 8, 6, 8, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7,…\n$ location      &lt;dbl&gt; 3, 1, 2, 4, 2, 2, 3, 1, 4, 1, 1, 2, 3, 4, 1, 3, 4, 2, 3,…\n$ fishing_level &lt;chr&gt; \"low\", \"high\", \"medium\", \"prohibited\", \"medium\", \"medium…\n\n\nThe glimpse output shows you:\n\nthe number of Rows and Columns in the data frame\nthe name of each column (variable)\nthe data type of each variable: https://tibble.tidyverse.org/articles/types.html (typically you’ll see: chr - character, dbl - double (number), or fct - factor (categorical variable)\n\nAlways check to make sure data is what you expected it to be\nAlso, try double clicking on dat_yt in the environment window (upper right) to open the data viewer\n\n\n\n\nR read-in ‘location’ as dbl (i.e., numerical variable) by default since locations are numbered 1, 2, 3, 4\n\n\n1dat_yt &lt;- dat_yt |&gt;\n2  mutate(location = as_factor(location))\n\n# check if class for location now is factor\n3glimpse(dat_yt)\n\n\n1\n\nAssign the results back to the ‘dat_yt’ object to store the changes\n\n2\n\nUse as_factor() to convert the location variable to a factor, and mutate() overwrites the location variable in dat_yt with the new factor version\n\n3\n\nYou can see in the glimpse() output that the variable location is now class fct (factor).\n\n\n\n\nRows: 100\nColumns: 8\n$ sex           &lt;chr&gt; \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"…\n$ length_cm     &lt;dbl&gt; 20.3, 16.0, 17.2, 17.1, 15.9, 20.5, 17.7, 15.1, 21.1, 19…\n$ gonad_wt_g    &lt;dbl&gt; 6.6, 22.0, 6.2, 17.4, 17.6, NA, 9.1, 15.4, 8.8, 7.6, 9.0…\n$ home_range_m2 &lt;dbl&gt; 3.6, 24.5, 3.4, 19.8, 15.7, 5.1, 7.8, 2.1, 3.5, 1.7, 2.2…\n$ gut_wt_g      &lt;dbl&gt; 2.6, 0.6, 2.1, 0.7, 0.4, 0.7, 1.6, 2.7, 0.4, 2.2, 0.8, 0…\n$ parasites     &lt;dbl&gt; 8, 8, 7, 8, 8, 8, 8, 6, 8, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7,…\n$ location      &lt;fct&gt; 3, 1, 2, 4, 2, 2, 3, 1, 4, 1, 1, 2, 3, 4, 1, 3, 4, 2, 3,…\n$ fishing_level &lt;chr&gt; \"low\", \"high\", \"medium\", \"prohibited\", \"medium\", \"medium…"
  },
  {
    "objectID": "Distributions.html#load-packages",
    "href": "Distributions.html#load-packages",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "You only need to “install” packages (download them to your computer) once.\nIf you have not already installed the tidyverse package to the computer you are using you can do so by: RStudio &gt; Tools &gt; Install Packages (type in package name)\nBut you have to “load” packages during each R session in order to use the functions within them\n\n\n1library(tidyverse)\n2library(skimr)\n\n\n1\n\nload the tidyverse package (which includes ggplot2 and dplyr)\n\n2\n\nload the skimr package (which includes the skim() function for descriptive statistics)\n\n\n\n\nThe tidyverse package is actually a collection of multiple R packages https://www.tidyverse.org/packages/ including the ggplot2 package (for plotting) and dplyr package (for organizing and summarizing data). And you can load these (and others packages in the tidyverse) all at once using library(tidyverse). You could alternatively load them separately library(ggplot2) and then library(dplyr) and so on.\nThe ggplot2 Package we will use primarily for making plots (and is part of the tidyverse) has great help pages: https://ggplot2.tidyverse.org/reference/index.html\nThe dplyr Package we will use for “data wrangling” (e.g., organizing, summarizing) and it also has (not as extensive) help pages https://dplyr.tidyverse.org/ (plus cheat sheets RStudio &gt; Help &gt; Cheatsheets)"
  },
  {
    "objectID": "Distributions.html#read-in-the-data-file",
    "href": "Distributions.html#read-in-the-data-file",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "A file named ‘YellowTangData_29_SEP_2016.csv’ is saved in the same folder (directory) as my .qmd file.\n\n1dat_yt &lt;- read_csv(\"YellowTangData_29_SEP_2016.csv\")\n\n\n1\n\nUse the read_csv() function to read the .csv data table file, and assign that to an R object named dat_yt\n\n\n\n\n\nThe read_csv() function is from the readr package in the tidyverse\nAfter running the code chunk above, the dat_yt object you created should show up in the RStudio Environment window (top right)"
  },
  {
    "objectID": "Distributions.html#view-some-of-the-data",
    "href": "Distributions.html#view-some-of-the-data",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "use glimpse() function to examine the structure of the data.frame named dat_yt\n\n\nglimpse(dat_yt)\n\nRows: 100\nColumns: 8\n$ sex           &lt;chr&gt; \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"…\n$ length_cm     &lt;dbl&gt; 20.3, 16.0, 17.2, 17.1, 15.9, 20.5, 17.7, 15.1, 21.1, 19…\n$ gonad_wt_g    &lt;dbl&gt; 6.6, 22.0, 6.2, 17.4, 17.6, NA, 9.1, 15.4, 8.8, 7.6, 9.0…\n$ home_range_m2 &lt;dbl&gt; 3.6, 24.5, 3.4, 19.8, 15.7, 5.1, 7.8, 2.1, 3.5, 1.7, 2.2…\n$ gut_wt_g      &lt;dbl&gt; 2.6, 0.6, 2.1, 0.7, 0.4, 0.7, 1.6, 2.7, 0.4, 2.2, 0.8, 0…\n$ parasites     &lt;dbl&gt; 8, 8, 7, 8, 8, 8, 8, 6, 8, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7,…\n$ location      &lt;dbl&gt; 3, 1, 2, 4, 2, 2, 3, 1, 4, 1, 1, 2, 3, 4, 1, 3, 4, 2, 3,…\n$ fishing_level &lt;chr&gt; \"low\", \"high\", \"medium\", \"prohibited\", \"medium\", \"medium…\n\n\nThe glimpse output shows you:\n\nthe number of Rows and Columns in the data frame\nthe name of each column (variable)\nthe data type of each variable: https://tibble.tidyverse.org/articles/types.html (typically you’ll see: chr - character, dbl - double (number), or fct - factor (categorical variable)\n\nAlways check to make sure data is what you expected it to be\nAlso, try double clicking on dat_yt in the environment window (upper right) to open the data viewer"
  },
  {
    "objectID": "Distributions.html#change-the-class-of-variable-location",
    "href": "Distributions.html#change-the-class-of-variable-location",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "R read-in as dbl (i.e., numerical variable) by default since locations are numbered 1, 2, 3, 4\nUse as_factor() function to convert it to a factor (i.e., a nominal categorical variable)\nNote: we also use the mutate() function here since we need to\n\n\ndat_yt &lt;- dat_yt |&gt; \n  mutate(location = as_factor(location))\n\n# check if class for location now is fct\nglimpse(dat_yt)\n\nRows: 100\nColumns: 8\n$ sex           &lt;chr&gt; \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"…\n$ length_cm     &lt;dbl&gt; 20.3, 16.0, 17.2, 17.1, 15.9, 20.5, 17.7, 15.1, 21.1, 19…\n$ gonad_wt_g    &lt;dbl&gt; 6.6, 22.0, 6.2, 17.4, 17.6, NA, 9.1, 15.4, 8.8, 7.6, 9.0…\n$ home_range_m2 &lt;dbl&gt; 3.6, 24.5, 3.4, 19.8, 15.7, 5.1, 7.8, 2.1, 3.5, 1.7, 2.2…\n$ gut_wt_g      &lt;dbl&gt; 2.6, 0.6, 2.1, 0.7, 0.4, 0.7, 1.6, 2.7, 0.4, 2.2, 0.8, 0…\n$ parasites     &lt;dbl&gt; 8, 8, 7, 8, 8, 8, 8, 6, 8, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7,…\n$ location      &lt;fct&gt; 3, 1, 2, 4, 2, 2, 3, 1, 4, 1, 1, 2, 3, 4, 1, 3, 4, 2, 3,…\n$ fishing_level &lt;chr&gt; \"low\", \"high\", \"medium\", \"prohibited\", \"medium\", \"medium…\n\n\nYou can see in the glimpse() output that the variable location is now class fct (factor)."
  },
  {
    "objectID": "Distributions.html#ggplot2-reference-pages",
    "href": "Distributions.html#ggplot2-reference-pages",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "ggplot2 reference pages",
    "text": "ggplot2 reference pages\n\nFunctions in ggplot2 package (and the rest of the tidyverse) have their own additional web pages. Here’s the one for geom_histogram: &lt;https://ggplot2.tidyverse.org/reference/geom_histogram.html&gt;\nFind them quickly by Googling: ggplot histogram or geom histogram\nScroll down the the bottom of the geom_histogram web page to find example code and plots. This is often a fast way to find what you are looking to do."
  },
  {
    "objectID": "Distributions.html#create-a-faceted-histogram",
    "href": "Distributions.html#create-a-faceted-histogram",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Create a “faceted” histogram",
    "text": "Create a “faceted” histogram\n\nYellow Tang length_cm (numerical variable) by the variable (column) sex (categorical nominal variable)\nhttps://ggplot2.tidyverse.org/reference/facet_grid.html\n\nCan add a layer: + facet_grid(rows = vars(sex))\nThen try specifying the cols argument instead of rows: facet_grid(cols = vars(sex))\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n  facet_grid(rows = vars(sex)) # each sex in it's own row\n\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n  facet_grid(cols = vars(sex)) # each sex in it's own column\n\n\n\n\n\n\nWhich plot is best for comparing the 2 distributions?\nHistograms stacked on top of each other are better for comparing distributions because the x-axis line up\n\n\nCompare/describe the two distributions (central tendency, spread, shape):\n\nWhich has higher central tendency? male Yellow Tang\nWhich has higher variability? Variability (spread) is hard to judge by eye, they look pretty similar - both of have pretty “Normal” distribution (unimodal - single middle peak)\n\nHistograms can sometimes show you patterns in your data you were not aware of:\n\nIn this case the bimodal shape (2 distinct peaks) suggests there might be something (another variable) that is causing that distribution shape\nYellow Tang fish do not have a sexually distinctive external morphology (other than general body size), so if you just collected and measured a sample of fish you might not realize they were 2 sexes unless you dissected them.\n\n\n\nHistogram of length (numerical variable) faceted by two categorical variables\n&lt;https://ggplot2.tidyverse.org/reference/facet_grid.html&gt;\n\nCan add a layer: + facet_grid(rows = vars(sex), cols = vars(location))\nThen try specifying the cols argument instead of rows: facet_grid(cols = vars(sex))\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n  facet_grid(rows = vars(sex), cols = vars(location)) \n\n\n\n# each sex in it's own row\n# each location in it's own column"
  },
  {
    "objectID": "Distributions.html#histograms-with-skewed-distributions",
    "href": "Distributions.html#histograms-with-skewed-distributions",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Histograms with skewed distributions",
    "text": "Histograms with skewed distributions\n\nggplot(dat_yt, aes(x = home_range_m2)) +\n  geom_histogram() +\n  ggtitle(\"home range (all fish)\")\n\n\n\n\n\nggplot(dat_yt, aes(x = home_range_m2)) +\n  geom_histogram() +\n  facet_grid(rows = vars(sex))+\n  ggtitle(\"home range (by sex)\")\n\n\n\n\n\nCompare/describe the distributions (central tendency, spread, shape):\nThe combined distribution looks similar to when males and females are plotted separately - skewed (“right skewed” or “skewed with long positive tail”) - Most fish have home ranges around 1 to 10 m2, a handful with much larger home ranges, and similar max values\n\n\nDoes the sex variable have an effect on the distribution?\nIn this case sex does not appear to influence the distribution of home range (both distributions are similar). This is in contrast to length_cm, where the sex variable has a strong effect on the distribution."
  },
  {
    "objectID": "Distributions.html#add-vertical-lines-to-a-histogram-using-geom_vline",
    "href": "Distributions.html#add-vertical-lines-to-a-histogram-using-geom_vline",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Add vertical lines to a histogram using geom_vline()",
    "text": "Add vertical lines to a histogram using geom_vline()\nThe very large home range values “pull” the mean out towards the tail in the distribution, where as median is not as affected by outliers.\n\n#Histograms of home range (all fish)\ndat_yt |&gt; \nggplot(aes(x = home_range_m2)) +\n  geom_histogram() +\n#Add vertical lines (geom_vline) for mean (red) and median (blue)\n  geom_vline(aes(xintercept = mean(home_range_m2)),\n             color = \"red\", size = 2) +\n  geom_vline(aes(xintercept = median(home_range_m2)),\n             color = \"blue\", size = 2)"
  },
  {
    "objectID": "Distributions.html#scale_x_continuous-to-define-x-axis-tick-marks-in-histogram",
    "href": "Distributions.html#scale_x_continuous-to-define-x-axis-tick-marks-in-histogram",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "scale_x_continuous() to define x-axis tick marks in histogram",
    "text": "scale_x_continuous() to define x-axis tick marks in histogram\n\nHistograms of Yellow Tang parasites\nWe can define position of tick marks on x-axis by adding a layer with the scale_x_continuous() function, and defining the breaks = argument\nTRY to Google: ggplot scale_x_continuous, go to ggplot reference page to see examples of using it:\n\n# Histogram of parasite count w/ binwidth = 1 \nggplot(dat_yt, aes(x = parasites)) +\n  geom_histogram(binwidth = 1)\n\n\n\n# Make it again adding additional layer to define breaks (position of tick marks on x-axis)\nggplot(dat_yt, aes(x = parasites)) +\n  geom_histogram(binwidth = 1) + \n  scale_x_continuous(breaks = 0:8)\n\n\n\n# could also manually define the breaks (put in specific values)\nggplot(dat_yt, aes(x = parasites)) +\n  geom_histogram(binwidth = 1) + \n  scale_x_continuous(breaks = c(0, 2, 4, 6, 8))\n\n\n\n\n\nCompare/describe the distribution (central tendency, spread, shape):\nskewed (“left skewed” or “skewed with a tail of low values”) - Most fish have 6-8 parasites, and some with fewer, a couple with 0."
  },
  {
    "objectID": "Distributions.html#using-help-files",
    "href": "Distributions.html#using-help-files",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Using Help Files",
    "text": "Using Help Files\nLook at the help file for the function ‘mean’ for the answer\n\n1?mean\n\n\n1\n\nthe ‘?’ opens the help file for the function ‘mean’ in the Help tab (bottom right window). And in the help file you can look at the arguments and see that there is an argument na.rm that you can set to TRUE to ignore the NA’s.\n\n\n\n\nHere’s an annotated description of what is in a standard R help page (each function has one)\n\nAdd argument na.rm = T (remove NA’s) to ‘mean()’ & ‘median()’\n\ndat_yt |&gt; \n  group_by(sex) |&gt; \n1  summarise(mean_gonad_wt_g  = mean(gonad_wt_g, na.rm = T),\n2            median_gonad_wt_g = median(gonad_wt_g, na.rm = T))\n\n\n1\n\nAdd the argument na.rm = T to the mean() and\n\n2\n\nmedian() functions to ignore the NA’s caused here by empty cells (missing data for fish gonad weight) in the original .csv file\n\n\n\n\n# A tibble: 2 × 3\n  sex   mean_gonad_wt_g median_gonad_wt_g\n  &lt;chr&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1 F               15.0               14.9\n2 M                7.96               8.1\n\n\nand now it will calcualte the mean and median without the NAs"
  },
  {
    "objectID": "Distributions.html#na_if-to-replace-values-with-nas",
    "href": "Distributions.html#na_if-to-replace-values-with-nas",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "na_if() to replace values with NAs",
    "text": "na_if() to replace values with NAs\nThe code below will replace the improbable gut_wt_g values with NA in dat_yt (original values will be overwritten with NA – but not in original .csv file, just in dat_yt table in your R virtual workspace)\n\nWith your actual data you’d want to go back and check the data sheets to see if this was a data recording or entry error, and if so, correct that in the excel and/or .csv file\n\n\n1dat_yt &lt;- dat_yt |&gt;\n2  mutate(gut_wt_g = na_if(gut_wt_g, 1300),\n3         gut_wt_g = na_if(gut_wt_g, 25000))\n\n\n1\n\nAssign dat_yt to itself to save the result, pass dat_yt using the |&gt; pipe operator to\n\n2\n\nthe mutate() function which adds new columns or (in this case) writes over the existing gut_wt_g column, use the na_if() to replace 1300 (a extreme gut weight value) and\n\n3\n\nadd a similar mutate argument for the value of 25000\n\n\n\n\n\ndat_yt |&gt;\n1  filter(gut_wt_g &gt; 1000)\n\n\n1\n\nCan confirm values were replaced with NAs by using the filter function again to confirm the extreme values are no longer in the gut_wt_g column\n\n\n\n\n# A tibble: 0 × 8\n# ℹ 8 variables: sex &lt;chr&gt;, length_cm &lt;dbl&gt;, gonad_wt_g &lt;dbl&gt;,\n#   home_range_m2 &lt;dbl&gt;, gut_wt_g &lt;dbl&gt;, parasites &lt;dbl&gt;, location &lt;fct&gt;,\n#   fishing_level &lt;chr&gt;\n\n\nThis produces an empty table which means the 1300 and 25000 were replaced with NAs and are no longer in the gut_wt_g column of dat_yt\n\nYou could also double click on the dat_yt table in the Environment tab (top right window) to see the table, then click the down arrow sort the gut_wt_g column, and confirm extreme values are not longer there."
  },
  {
    "objectID": "Distributions.html#gonad-weight-all-fish-histogram-boxplot-individual-value-plot-and-descriptive-stats",
    "href": "Distributions.html#gonad-weight-all-fish-histogram-boxplot-individual-value-plot-and-descriptive-stats",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Gonad weight, all fish (histogram, boxplot, individual value plot, and descriptive stats)",
    "text": "Gonad weight, all fish (histogram, boxplot, individual value plot, and descriptive stats)\n\nWritten description of distribution is after the plots and descriptive statistics\n\n\n1ggplot(dat_yt, aes(x = gonad_wt_g)) +\n  geom_histogram() +\n  xlab(\"Gonad Weight (g)\")\n\n\n1\n\nFor histogram: must specify x = gonad_wt_g in aes()\n\n\n\n\n\n\n\n\n1ggplot(dat_yt, aes(y = gonad_wt_g)) +\n  geom_boxplot() +\n  ylab(\"Gonad Weight (g)\") \n\n\n1\n\nFor boxplot: must specify y = gonad_wt_g in aes()\n\n\n\n\n\n\n\n\n1ggplot(dat_yt, aes(x = 1, y = gonad_wt_g)) +\n2  geom_jitter() +\n  ylab(\"Gonad Weight (g)\") \n\n\n1\n\nFor ivp (geom_jitter): must specify x = 1,  y = gonad_wt_g in aes()\n\n2\n\ngeom_jitter() is like geom_point(), but randomly moves values a little bit (“jitters” them) so they don’t overlap for visibility\n\n\n\n\n\n\n\n\nNote the x-axis values have no meaning when you are doing an individual value plot (ivp) like this. It’s just a way to get the points to spread out horizontally.\n\n\n# Descriptive statistics using skim function from skimr package, for all yellow tang in the same, for each variable (column) in data_yt\ndat_yt |&gt; \nskim(gonad_wt_g)\n\n\nData summary\n\n\nName\ndat_yt\n\n\nNumber of rows\n100\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ngonad_wt_g\n2\n0.98\n11.48\n4.75\n2\n7.8\n10.25\n14.9\n24.3\n▂▇▃▃▁\n\n\n\n\n\n\nDescribe the distribution:\n\nRelatively symmetrical, some positive skew (right skew)\n1 strong peak ~8 g"
  },
  {
    "objectID": "Distributions.html#gonad-weight-by-sex-histogram-boxplot-individual-value-plot-and-descriptive-stats",
    "href": "Distributions.html#gonad-weight-by-sex-histogram-boxplot-individual-value-plot-and-descriptive-stats",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Gonad weight by sex (histogram, boxplot, individual value plot, and descriptive stats)",
    "text": "Gonad weight by sex (histogram, boxplot, individual value plot, and descriptive stats)\n\nWritten description of distribution is after the plots and descriptive statistics\n\n\n1ggplot(dat_yt, aes(x = gonad_wt_g)) +\n  geom_histogram() +\n2  facet_grid (rows = vars(sex)) +\n  xlab(\"Gonad Weight (g)\")\n\n\n1\n\nFor histogram: must specify x = gonad_wt_g in aes()\n\n2\n\nuse facet_grid to create separate histograms for each sex\n\n\n\n\n\n\n\n\n1ggplot(dat_yt, aes(x = sex, y = gonad_wt_g)) +\n  geom_boxplot() +\n  ylab(\"Gonad Weight (g)\") +\n  xlab(\"Sex\")\n\n\n1\n\nFor boxplot: must specify x = sex, y = gonad_wt_g in aes()\n\n\n\n\n\n\n\n\n1ggplot(dat_yt, aes(x = sex,  y = gonad_wt_g)) +\n2  geom_jitter() +\n  ylab(\"Gonad Weight (g)\") +\n  xlab(\"Sex\") \n\n\n1\n\nFor ivp (geom_jitter): must specify x = sex,  y = gonad_wt_g in aes()\n\n2\n\ngeom_jitter() is like geom_point(), but randomly moves values a little bit (“jitters” them) so they don’t overlap for visibility\n\n\n\n\n\n\n\n\n# Descriptive statistics using skim function from skimr package, for all yellow tang in the same, for each variable (column) in data_yt\ndat_yt |&gt;\n1  group_by(sex) |&gt;\n2  skim(gonad_wt_g)\n\n\n1\n\ngroup_by() is a dplyr function that tells R to calculate the descriptive statistics separately for each group (in this case by sex)\n\n2\n\nskim() is a function from the skimr package that calculates descriptive statistics for each group\n\n\n\n\n\nData summary\n\n\nName\ngroup_by(dat_yt, sex)\n\n\nNumber of rows\n100\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nsex\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nsex\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ngonad_wt_g\nF\n1\n0.98\n15.00\n4.00\n6.2\n12.1\n14.9\n17.4\n24.3\n▂▆▇▆▂\n\n\ngonad_wt_g\nM\n1\n0.98\n7.96\n2.06\n2.0\n6.6\n8.1\n9.2\n13.2\n▁▃▇▅▁\n\n\n\n\n\n\nDescribe/compare the distributions:\n\nDistributions are both relatively symmetrical, single peaks\nThe difference based on sex is clear\nFemales have larger gonad weights (higher mean) and there is more variability (more spread) in female gonad weight than male gonad weight\n\n\n\n\nGonad weight by location\nSame as by sex above just switch out sex for location in all the code"
  },
  {
    "objectID": "Distributions.html#gonad-weight-by-sex-location-histogram-boxplot-individual-value-plot-and-descriptive-stats",
    "href": "Distributions.html#gonad-weight-by-sex-location-histogram-boxplot-individual-value-plot-and-descriptive-stats",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Gonad weight by sex & location (histogram, boxplot, individual value plot, and descriptive stats)",
    "text": "Gonad weight by sex & location (histogram, boxplot, individual value plot, and descriptive stats)\n\nHistogram:\n\nspecify both rows and cols arguments in facet_grid()\n\n\n#Histogram gonad weight by sex\nggplot(dat_yt, aes(x = gonad_wt_g)) +\n  geom_histogram() +\n  facet_grid(rows = vars(sex), cols = vars(location)) +\n  xlab(\"Gonad Weight (g)\")\n\n\n\n#reverse rows and cols variables as it provides different perspective on comparisons. \nggplot(dat_yt, aes(x = gonad_wt_g)) +\n  geom_histogram() +\n  facet_grid(rows = vars(location), cols = vars(sex)) +\n  xlab(\"Gonad Weight (g)\")\n\n\n\n\n\n\nBoxplot:\n\nspecify x = location\nand then include the additional aesthetic argument color = sex\n\n\nggplot(dat_yt, aes(x= location, y = gonad_wt_g, color = sex)) +\n  geom_boxplot() +\n  ylab(\"Gonad Weight (g)\") +\n  xlab(\"Location\")\n\n\n\n\n\n\nIndividual value plot\n\nggplot(dat_yt, aes(x= location, y = gonad_wt_g, color = sex)) +\n  geom_jitter(width = 0.1) +\n  ylab(\"Gonad Weight (g)\") +\n  xlab(\"Location\")\n\n\n\n\n\n\nskim() descriptive statistics output by sex and location\n\ndat_yt |&gt; \n  group_by(sex, location) |&gt; \n  skim(gonad_wt_g)\n\n\nData summary\n\n\nName\ngroup_by(dat_yt, sex, loc…\n\n\nNumber of rows\n100\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nsex, location\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nsex\nlocation\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ngonad_wt_g\nF\n1\n0\n1.00\n16.65\n3.16\n12.5\n14.07\n16.00\n18.83\n22.0\n▇▃▃▃▃\n\n\ngonad_wt_g\nF\n2\n0\n1.00\n12.29\n3.18\n6.2\n10.73\n12.10\n14.75\n17.6\n▂▃▇▃▃\n\n\ngonad_wt_g\nF\n3\n0\n1.00\n15.28\n4.59\n8.2\n11.50\n15.30\n18.10\n24.3\n▅▂▇▅▂\n\n\ngonad_wt_g\nF\n4\n1\n0.92\n15.78\n3.88\n9.9\n12.85\n15.85\n17.88\n21.8\n▇▅▅▇▅\n\n\ngonad_wt_g\nM\n1\n0\n1.00\n7.96\n1.58\n5.9\n6.80\n7.60\n9.00\n11.2\n▇▃▅▃▂\n\n\ngonad_wt_g\nM\n2\n1\n0.92\n7.15\n2.86\n2.0\n5.20\n7.50\n8.52\n11.8\n▂▇▃▆▃\n\n\ngonad_wt_g\nM\n3\n0\n1.00\n7.92\n1.29\n4.7\n7.68\n8.20\n8.53\n9.7\n▁▁▁▇▂\n\n\ngonad_wt_g\nM\n4\n0\n1.00\n8.81\n2.12\n6.0\n7.28\n8.95\n9.93\n13.2\n▆▆▇▂▂\n\n\n\n\n\n\n\nDescribe/compare the distributions:\n\nDistributions are all relatively symmetrical, although the sample sizes are pretty small in each group (sex + location combination) and it is hard to judge distribution shape with small sample sizes.\nThe difference based on sex are clear\nFemales have larger gonad weights and there is more spread (variability) in female gonad weight than male gonad weight\nLocations are pretty similar, site 2 looks a little smaller for females (no very high values)"
  },
  {
    "objectID": "test_html_page.html",
    "href": "test_html_page.html",
    "title": "Untitled",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "test_html_page.html#quarto",
    "href": "test_html_page.html#quarto",
    "title": "Untitled",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "test_html_page.html#running-code",
    "href": "test_html_page.html#running-code",
    "title": "Untitled",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\nmean(c(2,4))\n\n[1] 3\n\n2 * 2\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "Distributions.html#view-the-data-table",
    "href": "Distributions.html#view-the-data-table",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "1glimpse(dat_yt)\n\n\n1\n\nuse glimpse() function to examine the structure of the tibble named dat_yt\n\n\n\n\nRows: 100\nColumns: 8\n$ sex           &lt;chr&gt; \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"…\n$ length_cm     &lt;dbl&gt; 20.3, 16.0, 17.2, 17.1, 15.9, 20.5, 17.7, 15.1, 21.1, 19…\n$ gonad_wt_g    &lt;dbl&gt; 6.6, 22.0, 6.2, 17.4, 17.6, NA, 9.1, 15.4, 8.8, 7.6, 9.0…\n$ home_range_m2 &lt;dbl&gt; 3.6, 24.5, 3.4, 19.8, 15.7, 5.1, 7.8, 2.1, 3.5, 1.7, 2.2…\n$ gut_wt_g      &lt;dbl&gt; 2.6, 0.6, 2.1, 0.7, 0.4, 0.7, 1.6, 2.7, 0.4, 2.2, 0.8, 0…\n$ parasites     &lt;dbl&gt; 8, 8, 7, 8, 8, 8, 8, 6, 8, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7,…\n$ location      &lt;dbl&gt; 3, 1, 2, 4, 2, 2, 3, 1, 4, 1, 1, 2, 3, 4, 1, 3, 4, 2, 3,…\n$ fishing_level &lt;chr&gt; \"low\", \"high\", \"medium\", \"prohibited\", \"medium\", \"medium…\n\n\nThe glimpse output shows you:\n\nthe number of Rows and Columns in the data frame\nthe name of each column (variable)\nthe data type of each variable: https://tibble.tidyverse.org/articles/types.html (typically you’ll see: chr - character, dbl - double (number), or fct - factor (categorical variable)\n\nAlways check to make sure data is what you expected it to be\nAlso, try double clicking on dat_yt in the environment window (upper right) to open the data viewer"
  },
  {
    "objectID": "Distributions.html#change-the-class-of-location-to-factor",
    "href": "Distributions.html#change-the-class-of-location-to-factor",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "",
    "text": "R read-in ‘location’ as dbl (i.e., numerical variable) by default since locations are numbered 1, 2, 3, 4\n\n\n1dat_yt &lt;- dat_yt |&gt;\n2  mutate(location = as_factor(location))\n\n# check if class for location now is factor\n3glimpse(dat_yt)\n\n\n1\n\nAssign the results back to the ‘dat_yt’ object to store the changes\n\n2\n\nUse as_factor() to convert the location variable to a factor, and mutate() overwrites the location variable in dat_yt with the new factor version\n\n3\n\nYou can see in the glimpse() output that the variable location is now class fct (factor).\n\n\n\n\nRows: 100\nColumns: 8\n$ sex           &lt;chr&gt; \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"…\n$ length_cm     &lt;dbl&gt; 20.3, 16.0, 17.2, 17.1, 15.9, 20.5, 17.7, 15.1, 21.1, 19…\n$ gonad_wt_g    &lt;dbl&gt; 6.6, 22.0, 6.2, 17.4, 17.6, NA, 9.1, 15.4, 8.8, 7.6, 9.0…\n$ home_range_m2 &lt;dbl&gt; 3.6, 24.5, 3.4, 19.8, 15.7, 5.1, 7.8, 2.1, 3.5, 1.7, 2.2…\n$ gut_wt_g      &lt;dbl&gt; 2.6, 0.6, 2.1, 0.7, 0.4, 0.7, 1.6, 2.7, 0.4, 2.2, 0.8, 0…\n$ parasites     &lt;dbl&gt; 8, 8, 7, 8, 8, 8, 8, 6, 8, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7,…\n$ location      &lt;fct&gt; 3, 1, 2, 4, 2, 2, 3, 1, 4, 1, 1, 2, 3, 4, 1, 3, 4, 2, 3,…\n$ fishing_level &lt;chr&gt; \"low\", \"high\", \"medium\", \"prohibited\", \"medium\", \"medium…"
  },
  {
    "objectID": "Distributions.html#calculate-mean-median-length",
    "href": "Distributions.html#calculate-mean-median-length",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Calculate mean & median length",
    "text": "Calculate mean & median length\n\nfor all yellow tang in data set\n\n‘summarize()’ is from dplyr package (part of tidyverse)\n\n1dat_yt |&gt;\n2  summarize(mean_length_cm =  mean(length_cm),\n3            median_length_cm =  median(length_cm))\n\n# Note: ctrl+shift+m or cmd+shift+m (Mac) will insert the pipe operator: |&gt;\n\n\n1\n\nPass dat_yt using the |&gt; pipe operator to the summarize() function\n\n2\n\nusing the mean() and median() functions of the length_cm variable\n\n3\n\nand name those columns mean_length_cm and median_length_cm where those descriptive statistic values will be stored\n\n\n\n\n# A tibble: 1 × 2\n  mean_length_cm median_length_cm\n           &lt;dbl&gt;            &lt;dbl&gt;\n1           18.0             18.2"
  },
  {
    "objectID": "Distributions.html#use-group_by-with-summarize-to-calculate-stats-by-another-variable",
    "href": "Distributions.html#use-group_by-with-summarize-to-calculate-stats-by-another-variable",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Use group_by() with summarize() to calculate stats by another variable",
    "text": "Use group_by() with summarize() to calculate stats by another variable\nmin, mean, median, and max number of parasites for each category in the sex variable\n\n1dat_yt |&gt;\n2  group_by(sex) |&gt;\n3  summarize(min_parasites =  min(parasites),\n4            mean_parasites =  mean(parasites),\n            median_parasites =  median(parasites),\n            max_parasites =  max(parasites))\n\n\n1\n\nPass the dat_yt data.frame using the |&gt; pipe operator\n\n2\n\nto the group_by() function and group (subset) the data by sex, then pass that\n\n3\n\nto the summarize() function to make calculations on each group of data\n\n4\n\nusing the min(), mean(), median(), and max() functions of the parasites variable and name those columns where those descriptive statistic values will be stored accordingly\n\n\n\n\n# A tibble: 2 × 5\n  sex   min_parasites mean_parasites median_parasites max_parasites\n  &lt;chr&gt;         &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;         &lt;dbl&gt;\n1 F                 1           6.38                7             8\n2 M                 0           5.9                 7             8"
  },
  {
    "objectID": "Distributions.html#calculate-mean-median-length-of-all-fish",
    "href": "Distributions.html#calculate-mean-median-length-of-all-fish",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Calculate mean & median length of all fish",
    "text": "Calculate mean & median length of all fish\n‘summarize()’ is from dplyr package (part of tidyverse)\n\n1dat_yt |&gt;\n2  summarize(mean_length_cm =  mean(length_cm),\n3            median_length_cm =  median(length_cm))\n\n# Note: ctrl+shift+m or cmd+shift+m (Mac) will insert the pipe operator: |&gt;\n\n\n1\n\nPass dat_yt using the |&gt; pipe operator to the summarize() function\n\n2\n\nusing the mean() and median() functions of the length_cm variable\n\n3\n\nand name those columns mean_length_cm and median_length_cm where those descriptive statistic values will be stored\n\n\n\n\n# A tibble: 1 × 2\n  mean_length_cm median_length_cm\n           &lt;dbl&gt;            &lt;dbl&gt;\n1           18.0             18.2"
  },
  {
    "objectID": "Distributions.html#add-group_by-to-calculate-by-sex",
    "href": "Distributions.html#add-group_by-to-calculate-by-sex",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Add group_by() to calculate by sex",
    "text": "Add group_by() to calculate by sex\n\nCalculate min, mean, median, and max number of parasites for each category in the sex variable\n\n\n1dat_yt |&gt;\n2  group_by(sex) |&gt;\n3  summarize(min_parasites =  min(parasites),\n4            mean_parasites =  mean(parasites),\n            median_parasites =  median(parasites),\n            max_parasites =  max(parasites))\n\n\n1\n\nPass the dat_yt data.frame using the |&gt; pipe operator\n\n2\n\nto the group_by() function and group (subset) the data by sex, then pass that\n\n3\n\nto the summarize() function to make calculations on each group of data\n\n4\n\nusing the min(), mean(), median(), and max() functions of the parasites variable and name those columns where those descriptive statistic values will be stored accordingly\n\n\n\n\n# A tibble: 2 × 5\n  sex   min_parasites mean_parasites median_parasites max_parasites\n  &lt;chr&gt;         &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;         &lt;dbl&gt;\n1 F                 1           6.38                7             8\n2 M                 0           5.9                 7             8"
  },
  {
    "objectID": "Distributions.html#histogram-of-length-for-all-fish",
    "href": "Distributions.html#histogram-of-length-for-all-fish",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Histogram of length for all fish",
    "text": "Histogram of length for all fish\n\n1dat_yt |&gt;\n2ggplot(aes(x = length_cm)) +\n3  geom_histogram()\n\n\n1\n\nPass the dat_yt with the pipe operator to the ggplot() function\n\n2\n\ndefine the “aesthetics” with aes() argument, and set the x variable we want to plot as length_cm\n\n3\n\nthen add + the geom_histogram() layer to plot the histogram\n\n\n\n\n\n\n\n\nSpecify number of bins\n\nAlyways try a few binwidths (or number of bins) each time you make a histogram before settling on one.\nIn the below examples ~25 bins looks pretty good.\n\n\nggplot(dat_yt, aes(x = length_cm)) + \n1  geom_histogram(bins = 5) +\n2  ggtitle(\"5 bins\")\n\n\n1\n\nadd the argument bins = 5 to the layer geom_histogram()\n\n2\n\nadd a title with function + ggtitle()\n\n\n\n\n\n\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n1  geom_histogram(bins = 25) +\n2  ggtitle(\"25 bins\")\n\n\n1\n\nIncrease the number of bins to 25\n\n2\n\nadd a title with function + ggtitle()\n\n\n\n\n\n\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n1  geom_histogram(bins = 100) +\n2  ggtitle(\"100 bins\")\n\n\n1\n\nIncrease the number of bins to 100\n\n2\n\nadd a title with function + ggtitle()\n\n\n\n\n\n\n\n\n\nSpecify the binwidth\n\nbinwidth will be in the same units as the variable you are plotting (cm in this case)\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n1  geom_histogram(binwidth = 1) +\n  ggtitle(\"1 cm binwidth\")\n\n\n1\n\nTypically want to pick binwidths that people are familiar with like 1 cm (i.e., best not to choose binwidths of some random number, for example 0.38 cm)\n\n\n\n\n\n\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 2) +\n  ggtitle(\"2 cm binwidth\")"
  },
  {
    "objectID": "Distributions.html#a-faceted-histogram",
    "href": "Distributions.html#a-faceted-histogram",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "A faceted histogram",
    "text": "A faceted histogram\nYellow Tang length_cm (numerical variable) faceted by the variable sex (categorical nominal variable)\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n1  facet_grid(rows = vars(sex))\n\n\n1\n\neach sex in a row with the ‘rows’ argument in `facet_grid()’ function\n\n\n\n\n\n\n\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n1  facet_grid(cols = vars(sex))\n\n\n1\n\neach sex in a column with the ‘cols’ argument in `facet_grid()’ function\n\n\n\n\n\n\n\n\nWhich histogram above is best for comparing the 2 distributions?\nHistograms stacked on top of each other are better for comparing distributions because the x-axes line up to directly compare values across the 2 plots\n\n\nCompare/describe the two distributions (central tendency, spread, shape):\n\nWhich has higher central tendency? male Yellow Tang\nWhich has higher variability? Variability (spread) is hard to judge by eye, they look pretty similar - both of have pretty “Normal” distribution (unimodal - single middle peak)\n\nHistograms can sometimes show you patterns in your data you were not aware of:\n\nIn this case the bimodal shape (2 distinct peaks) suggests there might be something (another variable) that is causing that distribution shape\nYellow Tang fish do not have a sexually distinctive external morphology (other than general body size), so if you just collected and measured a sample of fish you might not realize they were 2 sexes unless you dissected them."
  },
  {
    "objectID": "Distributions.html#histogram-faceted-by-two-categorical-variables",
    "href": "Distributions.html#histogram-faceted-by-two-categorical-variables",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Histogram faceted by two categorical variables",
    "text": "Histogram faceted by two categorical variables\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n1  facet_grid(rows = vars(sex), cols = vars(location))\n\n\n1\n\neach sex in a row and each location in a column"
  },
  {
    "objectID": "Distributions.html#mean-and-medium-show-skew",
    "href": "Distributions.html#mean-and-medium-show-skew",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Mean and medium show skew",
    "text": "Mean and medium show skew\n\ndat_yt |&gt; \n  #filter(home_range_m2 &lt; 40) |&gt; \n  group_by(sex) |&gt; \n  summarise(mean_home_range_m2 = mean(home_range_m2),\n            median_home_range_m2 = median(home_range_m2))\n\n# A tibble: 2 × 3\n  sex   mean_home_range_m2 median_home_range_m2\n  &lt;chr&gt;              &lt;dbl&gt;                &lt;dbl&gt;\n1 F                   10.8                  6.9\n2 M                   12.6                  5.9\n\n\nThe very large home range values (positive skew) pull the mean out towards to the right, while the median is not as affected by these very high values More normal/symmetrical distributions have mean and median values that are close to each other"
  },
  {
    "objectID": "Distributions.html#facet-by-two-categorical-variables",
    "href": "Distributions.html#facet-by-two-categorical-variables",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Facet by two categorical variables",
    "text": "Facet by two categorical variables\n\nggplot(dat_yt, aes(x = length_cm)) +\n  geom_histogram(binwidth = 1) +\n1  facet_grid(rows = vars(sex), cols = vars(location))\n\n\n1\n\neach sex in a row and each location in a column"
  },
  {
    "objectID": "Distributions.html#compare-mean-to-medium-to-assess-skew",
    "href": "Distributions.html#compare-mean-to-medium-to-assess-skew",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Compare mean to medium to assess skew",
    "text": "Compare mean to medium to assess skew\n\ndat_yt |&gt; \n  #filter(home_range_m2 &lt; 40) |&gt; \n  group_by(sex) |&gt; \n  summarise(mean_home_range_m2 = mean(home_range_m2),\n            median_home_range_m2 = median(home_range_m2))\n\n# A tibble: 2 × 3\n  sex   mean_home_range_m2 median_home_range_m2\n  &lt;chr&gt;              &lt;dbl&gt;                &lt;dbl&gt;\n1 F                   10.8                  6.9\n2 M                   12.6                  5.9\n\n\nThe very large home range values (positive skew) pull the mean out to the right, while the median is not as affected by these very high values. More normal or symmetrical distributions have very similar mean and median values."
  },
  {
    "objectID": "Distributions.html#add-vertical-lines-with-geom_vline",
    "href": "Distributions.html#add-vertical-lines-with-geom_vline",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Add vertical lines with geom_vline()",
    "text": "Add vertical lines with geom_vline()\n\ndat_yt |&gt; \nggplot(aes(x = home_range_m2)) +\n  geom_histogram() +\n1  geom_vline(aes(xintercept = mean(home_range_m2)),\n2             color = \"red\", linewidth = 2) +\n  geom_vline(aes(xintercept = median(home_range_m2)),\n3             color = \"blue\", linewidth = 2)\n\n\n1\n\ngeom_vline() function to add vertical lines to the plot\n\n2\n\ncolor = \"red\" and linewidth = 2 arguments to change the color and thickness of the line\n\n3\n\ncolor = \"blue\" to make the median line blue\n\n\n\n\n\n\n\nThe very large home range values “pull” the mean (red line) out towards the tail in the distribution, where as median (blue line) is not as affected by outliers."
  },
  {
    "objectID": "Distributions.html#specify-x-axis-tick-marks-with-scale_x_continuous",
    "href": "Distributions.html#specify-x-axis-tick-marks-with-scale_x_continuous",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Specify x-axis tick marks with scale_x_continuous()",
    "text": "Specify x-axis tick marks with scale_x_continuous()\nTRY to Google: ggplot scale_x_continuous, go to ggplot reference page to see examples of using it:\n\n# Histogram of parasite count w/ binwidth = 1 \nggplot(dat_yt, aes(x = parasites)) +\n  geom_histogram(binwidth = 1) +\n  ggtitle(\"Parasite count (bad x-axis tick marks)\")\n\n\n\n\nWe can define position of tick marks on x-axis by adding a layer with the scale_x_continuous() function, and defining the breaks = argument\n\nggplot(dat_yt, aes(x = parasites)) +\n  geom_histogram(binwidth = 1) + \n1  scale_x_continuous(breaks = 0:8) +\n  ggtitle(\"Parasite count (tick at marks at 0, 1, 2, 3, 4, 5, 6, 7, 8)\")\n\n\n1\n\nAdd a ‘scale_x_continuous()’ layer with ‘breaks’ argument to define the position of the tick marks. ‘0:8’ creates a sequence of numbers from 0 to 8.\n\n\n\n\n\n\n\n\n# could also manually define the breaks (put in specific values)\nggplot(dat_yt, aes(x = parasites)) +\n  geom_histogram(binwidth = 1) + \n1  scale_x_continuous(breaks = c(0, 2, 4, 6, 8)) +\n  ggtitle(\"Parasite count (tick at marks at 0, 2, 4, 6, 8)\")\n\n\n1\n\nAdd a ‘scale_x_continuous()’ layer with ‘breaks’ argument to define the position of the tick marks. ‘c(0, 2, 4, 6, 8)’ manually sets tick marks at those values.\n\n\n\n\n\n\n\n\nCompare/describe the distribution (central tendency, spread, shape):\nskewed (“left skewed” or “skewed with a tail of low values”) - Most fish have 6-8 parasites, and some with fewer, a couple with 0."
  },
  {
    "objectID": "Distributions.html#use-filter-to-select-or-exclude-rows-that-contain-extreme-values",
    "href": "Distributions.html#use-filter-to-select-or-exclude-rows-that-contain-extreme-values",
    "title": "BIO 5100 - Visualize Distributions & Descriptive Statistics",
    "section": "Use filter() to select or exclude rows that contain extreme values",
    "text": "Use filter() to select or exclude rows that contain extreme values\n\nggplot(dat_yt, aes(x = gut_wt_g)) +\n  geom_histogram() +\n  ggtitle(\"Histogram of gut weight (g) for all Yellow Tang\")\n\n\n\n\nlooks like the two really extreme values are over 1000g\n\ndat_yt |&gt;\n1  filter(gut_wt_g &gt; 1000)\n\n\n1\n\nUse the filter() function to select the rows where gut_wt_g is greater than 1000g\n\n\n\n\n# A tibble: 2 × 8\n  sex   length_cm gonad_wt_g home_range_m2 gut_wt_g parasites location\n  &lt;chr&gt;     &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;   \n1 M          20.6        7.7           8.5     1300         0 2       \n2 F          15.6       17.2           3.5    25000         7 1       \n# ℹ 1 more variable: fishing_level &lt;chr&gt;\n\n\nThere were 2 rows (two fish) with really (unrealistically) large gut weights (i.e., ~ 3 lbs and ~55 lbs for fish that are 6-8 inches long). These were probably the result of a data recording or data entry error.\n\ndat_yt |&gt;\n1  filter(gut_wt_g &lt; 1000) |&gt;\n  ggplot(aes(x = gut_wt_g)) +\n  geom_histogram(bins = 15)\n\n\n1\n\nUse the filter() function to select the rows where gut_wt_g is less than 1000g (i.e., filter out the two extreme values)\n\n\n\n\n\n\n\n\nDescribe the distribution:\nthe distribution of gut weights (with the unrealistic values removed) is somewhere between normal and a uniform distribution"
  }
]